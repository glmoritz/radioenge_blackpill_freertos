// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/docker-existing-dockerfile
{
    "name": "Existing Dockerfile",
    // Sets the run context to one level up instead of the .devcontainer folder.
    "context": "..",
    "dockerFile": "./Dockerfile",
    // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
    // "dockerFile": "Dockerfile",
    //"image": "registry.gitlab.com/dkrasutski/loko_air/loko:1.0",
    //"initializeCommand": "",
    // Use 'forwardPorts' to make a list of ports inside the containe r available locally.
    // "forwardPorts": [],
    // Uncomment the next line to run commands after the container is created - for example installing curl.
    // "postCreateCommand": "apt-get update && apt-get install -y curl",
    // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
    // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
    // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
    // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
    // Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
    // "remoteUser": "vscode"    // Add the IDs of extensions you want installed when the container is created.
    "customizations": {
        "vscode": {
            "extensions": [        
                "marus25.cortex-debug",        
                "ms-python.python",
                "ms-vscode.cmake-tools",
                "ms-vscode.cpptools",
                "ms-vscode.vscode-embedded-tools",                
                "ms-vscode.cpptools-extension-pack",
                "ibm.output-colorizer"        
            ]
        }
    },
    "mounts": [
        "source=${localEnv:HOME}${localEnv:USERPROFILE}/.ssh,target=/tmp/.hostssh,type=bind,consistency=cached",
        "source=/dev/bus/usb,target=/dev/bus/usb,type=bind"
    ],
    "postCreateCommand": "mkdir -p ~/.ssh && cp -r /tmp/.hostssh/* ~/.ssh && chmod 700 ~/.ssh && chmod 600 ~/.ssh/*"
}
